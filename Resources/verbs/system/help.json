{
  "name": "help",
  "aliases": "?",
  "pattern": "*",
  "description": "Show help categories and topics.",
  "code": [
    "// Help categories and topics (expand as needed)",
    "var helpCategories = new Dictionary<string, List<string>>(StringComparer.OrdinalIgnoreCase)",
    "{",
    "    { \"basics\", new List<string> { \"movement\", \"communication\", \"objects\" } },",
    "    { \"building\", new List<string> { \"rooms\", \"exits\", \"properties\" } },",
    "    { \"programming\", new List<string> { \"verbs\", \"flags\", \"permissions\" } }",
    "};",
    "",
    "if (Args.Count == 0)",
    "{",
    "    var output = new StringBuilder();",
    "    output.AppendLine(\"=== Help Categories ===\");",
    "    foreach (var cat in helpCategories.Keys.OrderBy(x => x))",
    "    {",
    "        output.AppendLine($\"  {cat}\");",
    "    }",
    "    output.AppendLine();",
    "    output.AppendLine(\"Type 'help <category>' to see topics in that category.\");",
    "    notify(Player, output.ToString().TrimEnd());",
    "    return;",
    "}",
    "",
    "var category = Args[0].ToLower();",
    "if (!helpCategories.ContainsKey(category))",
    "{",
    "    notify(Player, $\"Unknown help category: {category}\");",
    "    return;",
    "}",
    "",
    "var topics = helpCategories[category];",
    "var output2 = new StringBuilder();",
    "output2.AppendLine($\"=== Help: {category} ===\");",
    "foreach (var topic in topics.OrderBy(x => x))",
    "{",
    "    output2.AppendLine($\"  {topic}\");",
    "}",
    "output2.AppendLine();",
    "output2.AppendLine(\"Type 'help <category> <topic>' for details.\");",
    "notify(Player, output2.ToString().TrimEnd());"
  ]
}

