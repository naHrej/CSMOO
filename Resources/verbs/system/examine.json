{
  "name": "examine",
  "aliases": "ex exa",
  "pattern": "*",
  "description": "Examine an object in detail",
  "code": [
    "var targetName = Args.FirstOrDefault() ?? \"here\";",
    "var targetId = Builtins.ResolveObject(targetName, Player);",
    "var targetPlayer = (Player)null;",
    "",
    "if (string.IsNullOrEmpty(targetId))",
    "{",
    "    Builtins.Notify(Player, $\"I don't see '{targetName}' here.\");",
    "    return;",
    "}",
    "",
    "// Check if target is a player",
    "if (Builtins.IsPlayerObject(targetId))",
    "{",
    "    targetPlayer = Builtins.FindPlayerById(targetId);",
    "}",
    "else",
    "{",
    "    // Check if object represents a player",
    "    targetPlayer = Builtins.GetPlayerFromObject(targetId);",
    "}",
    "",
    "// Get basic properties",
    "var name = Builtins.GetObjectName(targetId);",
    "var shortDesc = Builtins.GetObjectShortDesc(targetId);",
    "var longDesc = Builtins.GetObjectLongDesc(targetId);",
    "",
    "// Build the examination output",
    "var output = new StringBuilder();",
    "",
    "// Object name and short description",
    "if (!string.IsNullOrEmpty(shortDesc))",
    "{",
    "    output.AppendLine($\"{name} ({shortDesc})\");",
    "}",
    "else",
    "{",
    "    output.AppendLine(name);",
    "}",
    "",
    "// Long description",
    "if (!string.IsNullOrEmpty(longDesc))",
    "{",
    "    output.AppendLine(longDesc);",
    "}",
    "else",
    "{",
    "    output.AppendLine(\"You see nothing special.\");",
    "}",
    "",
    "// Show contents if it's a container",
    "var contents = Builtins.GetObjectsInLocation(targetId);",
    "if (contents.Any())",
    "{",
    "    output.AppendLine();",
    "    output.AppendLine(\"Contents:\");",
    "    foreach (var item in contents)",
    "    {",
    "        var itemName = Builtins.GetObjectName(item.Id);",
    "        var itemShort = Builtins.GetObjectShortDesc(item.Id);",
    "        var displayName = Builtins.GetDisplayName(item.Id);",
    "        output.AppendLine($\"  {displayName}\");",
    "    }",
    "}",
    "",
    "// Administrative information for Admin/Moderator users",
    "if (Builtins.IsAdmin(Player) || Builtins.IsModerator(Player))",
    "{",
    "    output.AppendLine();",
    "    output.AppendLine(\"=== Administrative Information ===\");",
    "    var targetObject = Builtins.FindObject(targetId);",
    "    output.AppendLine($\"Object ID: {targetObject.Id}\");",
    "    output.AppendLine($\"DB Reference: #{targetObject.DbRef}\");",
    "    ",
    "    // Show player flags if examining a player",
    "    if (targetPlayer != null)",
    "    {",
    "        var flags = Builtins.GetPlayerFlags(targetPlayer);",
    "        if (flags.Any())",
    "        {",
    "            output.AppendLine($\"Player Flags: {string.Join(\", \", flags)}\");",
    "        }",
    "        else",
    "        {",
    "            output.AppendLine(\"Player Flags: none\");",
    "        }",
    "    }",
    "    ",
    "    // Show object class",
    "    var objectClass = Builtins.GetObjectClass(targetId);",
    "    if (objectClass != null)",
    "    {",
    "        output.AppendLine($\"Class: {objectClass.Name}\");",
    "    }",
    "    ",
    "    // Show verbs",
    "    var verbs = Builtins.GetVerbsOnObject(targetId);",
    "    if (verbs.Any())",
    "    {",
    "        output.AppendLine(\"Verbs:\");",
    "        foreach (var verb in verbs.OrderBy(v => v.Name))",
    "        {",
    "            var verbInfo = $\"  {verb.Name}\";",
    "            if (!string.IsNullOrEmpty(verb.Aliases))",
    "            {",
    "                verbInfo += $\" ({verb.Aliases})\";",
    "            }",
    "            if (!string.IsNullOrEmpty(verb.Pattern))",
    "            {",
    "                verbInfo += $\" [{verb.Pattern}]\";",
    "            }",
    "            output.AppendLine(verbInfo);",
    "        }",
    "    }",
    "    else",
    "    {",
    "        output.AppendLine(\"Verbs: none\");",
    "    }",
    "    ",
    "    // Show properties",
    "    if (targetObject.Properties?.Any() == true)",
    "    {",
    "        output.AppendLine(\"Properties:\");",
    "        foreach (var prop in targetObject.Properties.OrderBy(p => p.Key))",
    "        {",
    "            var value = prop.Value?.ToString() ?? \"null\";",
    "            if (value.Length > 50)",
    "            {",
    "                value = value.Substring(0, 47) + \"...\";",
    "            }",
    "            output.AppendLine($\"  {prop.Key}: {value}\");",
    "        }",
    "    }",
    "    else",
    "    {",
    "        output.AppendLine(\"Properties: none\");",
    "    }",
    "}",
    "",
    "Builtins.Notify(Player, output.ToString().TrimEnd());"
  ]
}
